import logging
import sqlite3
import random
import string
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, WebAppInfo
from telegram.ext import Application, CommandHandler, ContextTypes

# ================= CONFIG =================
BOT_TOKEN = "7978191312:AAFyWVkBruuR42HTuTd_sQxFaKHBrre0VWw"
ADMIN_ID = 7459795138
WEB_APP_URL = "https://studiokbyt.onrender.com"
GROUP_ID = "@boomupbot10"  # рдЖрдкрдХрд╛ рдЧреНрд░реБрдк username
BOT_USERNAME = "Bingyt_bot"  # рдЕрдкрдиреЗ Bot рдХрд╛ username рдбрд╛рд▓реЗрдВ

# ================= LOGGING =================
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

# ================= DATABASE =================
def init_db():
    conn = sqlite3.connect("bot.db")
    cursor = conn.cursor()
    cursor.execute('''CREATE TABLE IF NOT EXISTS users (
        id TEXT PRIMARY KEY,
        points INTEGER DEFAULT 0,
        videos INTEGER DEFAULT 0,
        shares INTEGER DEFAULT 0,
        ref INTEGER DEFAULT 0,
        referred_by TEXT
    )''')
    conn.commit()
    conn.close()

def add_user(telegram_id, referred_by=None):
    conn = sqlite3.connect("bot.db")
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM users WHERE id=?", (str(telegram_id),))
    user = cursor.fetchone()

    if not user:
        cursor.execute(
            "INSERT INTO users (id, points, videos, shares, ref, referred_by) VALUES (?, ?, ?, ?, ?, ?)",
            (str(telegram_id), 0, 0, 0, 0, referred_by)
        )

        # рдЕрдЧрд░ рдХрд┐рд╕реА рдиреЗ refer рдХрд┐рдпрд╛ рд╣реИ рддреЛ рдмреЛрдирд╕ рджреЛ
        if referred_by:
            cursor.execute("SELECT * FROM users WHERE id=?", (str(referred_by),))
            ref_user = cursor.fetchone()
            if ref_user:
                cursor.execute("UPDATE users SET points = points + 100, ref = ref + 1 WHERE id=?", (str(referred_by),))

    conn.commit()
    conn.close()

def get_user(telegram_id):
    conn = sqlite3.connect("bot.db")
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM users WHERE id=?", (str(telegram_id),))
    user = cursor.fetchone()
    conn.close()
    return user

# ================= HANDLERS =================
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    referral_code = None

    # рдЕрдЧрд░ /start refID рджрд┐рдпрд╛ рдЧрдпрд╛ рд╣реИ рддреЛ рдкрдХрдбрд╝реЛ
    if context.args:
        referral_code = context.args[0]

    add_user(user.id, referral_code)

    welcome_message = f"""
ЁЯОм *Video Coin Earner Bot рдореЗрдВ рдЖрдкрдХрд╛ рд╕реНрд╡рд╛рдЧрдд рд╣реИ!* ЁЯОм

рдирдорд╕реНрддреЗ {user.first_name}! 

ЁЯУ╣ *рд╡реАрдбрд┐рдпреЛ рджреЗрдЦреЗрдВ рдФрд░ рдХреЙрдЗрди рдХрдорд╛рдПрдВ:*
тАв рдкреНрд░рддреНрдпреЗрдХ рд╡реАрдбрд┐рдпреЛ = 30 рдкреЙрдЗрдВрдЯреНрд╕  
тАв рджреИрдирд┐рдХ рд▓рд┐рдорд┐рдЯ = 10 рд╡реАрдбрд┐рдпреЛ  

ЁЯСе *рд░реЗрдлрд░рд▓ рд╕рд┐рд╕реНрдЯрдо:*  
тАв рджреЛрд╕реНрддреЛрдВ рдХреЛ рдЗрдирд╡рд╛рдЗрдЯ рдХрд░реЗрдВ  
тАв рд╣рд░ рдирдП рдпреВрдЬрд╝рд░ рдкрд░ 100 рдкреЙрдЗрдВрдЯреНрд╕  

ЁЯУд *рд╢реЗрдпрд░ рд╕рд┐рд╕реНрдЯрдо:*  
тАв рд╢реЗрдпрд░ рдХрд░рдиреЗ рдкрд░ 25 рдкреЙрдЗрдВрдЯреНрд╕  
тАв рд▓рд┐рдорд┐рдЯ = 5 рд╢реЗрдпрд░ / рджрд┐рди  

тЪая╕П *рдорд╣рддреНрд╡рдкреВрд░реНрдг:* рдмреЙрдЯ рдпреВрдЬрд╝ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдкрд╣рд▓реЗ рдЧреНрд░реБрдк рдЬреЙрдЗрди рдХрд░рдирд╛ рдЬрд╝рд░реВрд░реА рд╣реИред  

рдЖрдкрдХрд╛ ID: `{user.id}`
"""

    keyboard = [
        [
            InlineKeyboardButton("ЁЯЪА рдРрдк рд▓реЙрдиреНрдЪ рдХрд░реЗрдВ", web_app=WebAppInfo(url=WEB_APP_URL)),
            InlineKeyboardButton("ЁЯСе рдЧреНрд░реБрдк рдЬреЙрдЗрди рдХрд░реЗрдВ", url=f"https://t.me/{GROUP_ID.replace('@', '')}")
        ]
    ]

    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text(welcome_message, parse_mode='Markdown', reply_markup=reply_markup)

async def wallet(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = get_user(update.effective_user.id)
    if not user:
        await update.message.reply_text("рдХреГрдкрдпрд╛ рдкрд╣рд▓реЗ /start рдХрд░реЗрдВред")
        return

    wallet_message = f"""
ЁЯТ░ *рдЖрдкрдХрд╛ рд╡реЙрд▓реЗрдЯ*

ЁЯкЩ рдкреЙрдЗрдВрдЯреНрд╕: {user[1]}  
ЁЯУ╣ рд╡реАрдбрд┐рдпреЛ рджреЗрдЦреЗ: {user[2]}/10  
ЁЯУд рд╢реЗрдпрд░: {user[3]}/5  
ЁЯСе рд╕рдлрд▓ рд░реЗрдлрд░рд▓реНрд╕: {user[4]}  

ЁЯФД рд╕реНрдЯреЗрдЯрд╕: {'тЬЕ рд▓рд┐рдорд┐рдЯ рдкреВрд░реА' if user[2] >= 10 else 'ЁЯЯб рдЕрднреА рдФрд░ рдХрдорд╛ рд╕рдХрддреЗ рд╣реИрдВ'}
"""
    await update.message.reply_text(wallet_message, parse_mode="Markdown")

async def referral(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = get_user(update.effective_user.id)
    if not user:
        await update.message.reply_text("рдХреГрдкрдпрд╛ рдкрд╣рд▓реЗ /start рдХрд░реЗрдВред")
        return

    referral_link = f"https://t.me/{BOT_USERNAME}?start={update.effective_user.id}"

    message = f"""
ЁЯСе *Invite & Earn System*  

ЁЯФЧ рдЖрдкрдХрд╛ рд▓рд┐рдВрдХ:  
{referral_link}  

ЁЯУК рд╕реНрдЯреЗрдЯреНрд╕:  
тАв рдХреБрд▓ рд░реЗрдлрд░рд▓реНрд╕: {user[4]}  
тАв рдХрдорд╛рдИ: {user[4] * 100} рдкреЙрдЗрдВрдЯреНрд╕  

ЁЯТб рдЕрдкрдиреЗ рджреЛрд╕реНрддреЛрдВ рдХреЛ рдпрд╣ рд▓рд┐рдВрдХ рднреЗрдЬреЗрдВред  
"""
    keyboard = [[InlineKeyboardButton("ЁЯУд рд╢реЗрдпрд░ рдХрд░реЗрдВ", switch_inline_query=referral_link)]]
    await update.message.reply_text(message, parse_mode="Markdown", reply_markup=InlineKeyboardMarkup(keyboard))

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    msg = """
ЁЯОм *Bot Commands*

/start - рд╢реБрд░реВ рдХрд░реЗрдВ  
/wallet - рд╡реЙрд▓реЗрдЯ рджреЗрдЦреЗрдВ  
/referral - рд░реЗрдлрд░рд▓ рд▓рд┐рдВрдХ  
/help - рдорджрдж  

ЁЯСЙ рд╡реАрдбрд┐рдпреЛ рджреЗрдЦреЗрдВ, рд░реЗрдлрд░рд▓ рдХрд░реЗрдВ рдФрд░ рдкреЙрдЗрдВрдЯреНрд╕ рдХрдорд╛рдПрдВред
"""
    await update.message.reply_text(msg, parse_mode="Markdown")

# ================= MAIN =================
def main():
    init_db()
    app = Application.builder().token(BOT_TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("wallet", wallet))
    app.add_handler(CommandHandler("referral", referral))
    app.add_handler(CommandHandler("help", help_command))

    print("ЁЯдЦ Bot with Invite System is running...")
    app.run_polling()

if __name__ == "__main__":
    main()